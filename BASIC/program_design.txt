BASIC engine layout

1		comments and settings
50		Game startup calls

100		- Serial COM BIOS
110		Initialize Serial (#1, #2 files)
120 	Read a line from serial port to RX$
130 	Send TX$, wait for <CR> response to RX$


200		Game engine

1000	- Game data base
1010	- ON SC GOTO <list of id-per-scene RESTORE routines>
1020 	- ON AC GOTO <list of id-per-action RESTORE routines>
1030 	- (reserved for future on-gotos)
1100	- beginning of user game data


------

Variables and files:

	General
		DE(bug)	- enable extra debug output if set to 1
		VE(r)$	- engine version info.

	Serial port
		TX$		the line to send out the COM port
		RX$		line received from COM
		TM		Timeout for waiting for serial response
		RK		Received response line ok (set by RX routine)
		#1		Com port output file
		#2		Com port input file

	Game engine
		SC		Current scene number
		AC		Current action number

------

	in the engine...
50 GOSUB 100	: REM initialize COM port
60 GOTO 200		: REM startup game engine
...

	example to send out comport and wait for a response
2xx TX$ = "FR2933SE" : GOSUB 130	: TX 'seek', wait for response
2xx TX$ = "FR2950PL" : GOSUB 130	: TX 'play until', wait for response

	Example scene data entry points (required at 1010, 1020)
1010 ON SC GOTO 1100,1110,1120,1130,...
1020 ON AC GOTO 1200,1210,1220,1230,...

	example game data with entry point hooks
1100 RESTORE 1101 : RETURN
1101 DATA "scene 1 data is here",...
1110 RESTORE 1110 : RETURN
1111 DATA "scene 2 data is here",...
...

1200 RESTORE 1201 : RETURN
1201 DATA "This is item 1"
1210 RESTORE 1211 : RETURN
1211 DATA "This is item 2"
....

----

For automated actions:
	"~END"			end of action list
	"~LD"			What follows are sequences to send to the LD device
	"~AC"			What follows is an action ID to perform
	"~SC"			What follows is a scene ID to go to.